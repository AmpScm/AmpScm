#nullable enable
abstract AmpScm.Buckets.Cryptography.AsymmetricCryptoKey.GetValues(bool includePrivate = false) -> System.Collections.Generic.IReadOnlyList<System.Numerics.BigInteger>!
AmpScm.Buckets.Cryptography.AsymmetricCryptoKey
AmpScm.Buckets.Cryptography.AsymmetricCryptoKey.Algorithm.get -> AmpScm.Buckets.Cryptography.CryptoAlgorithm
AmpScm.Buckets.Cryptography.AsymmetricCryptoKey.HasPrivateKey.get -> bool
AmpScm.Buckets.Cryptography.AsymmetricCryptoKey.HasPrivateKey.set -> void
AmpScm.Buckets.Cryptography.AsymmetricCryptoKey.ToCryptoKeyChain() -> AmpScm.Buckets.Cryptography.CryptoKeyChain!
AmpScm.Buckets.Cryptography.BucketDecryptionException
AmpScm.Buckets.Cryptography.BucketDecryptionException.BucketDecryptionException() -> void
AmpScm.Buckets.Cryptography.BucketDecryptionException.BucketDecryptionException(string! message) -> void
AmpScm.Buckets.Cryptography.BucketDecryptionException.BucketDecryptionException(string! message, System.Exception! innerException) -> void
AmpScm.Buckets.Cryptography.BucketDecryptionException.BucketDecryptionException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
AmpScm.Buckets.Cryptography.CryptoDataBucket
AmpScm.Buckets.Cryptography.CryptoExtensions
AmpScm.Buckets.Cryptography.DecryptBucket
AmpScm.Buckets.Cryptography.DecryptBucket.DecryptBucket(AmpScm.Buckets.Bucket! source) -> void
AmpScm.Buckets.Cryptography.DecryptBucket.KeyChain.get -> AmpScm.Buckets.Cryptography.CryptoKeyChain!
AmpScm.Buckets.Cryptography.DecryptBucket.KeyChain.init -> void
AmpScm.Buckets.Cryptography.PublicKeySignature
AmpScm.Buckets.Cryptography.PublicKeySignature.Fingerprint.get -> System.ReadOnlyMemory<byte>
AmpScm.Buckets.Cryptography.PublicKeySignature.FingerprintString.get -> string!
AmpScm.Buckets.Cryptography.PublicKeySignature.MailAddress.get -> System.Net.Mail.MailAddress?
AmpScm.Buckets.Cryptography.Radix64ArmorBucket
AmpScm.Buckets.Cryptography.SignatureBucket
AmpScm.Buckets.Cryptography.SignatureBucket.ReadAsync() -> System.Threading.Tasks.ValueTask
AmpScm.Buckets.Cryptography.SignatureBucket.ReadFingerprintAsync() -> System.Threading.Tasks.ValueTask<System.ReadOnlyMemory<byte>>
AmpScm.Buckets.Cryptography.SignatureBucket.ReadKeyAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Cryptography.PublicKeySignature!>
AmpScm.Buckets.Cryptography.SignatureBucket.SignatureBucket(AmpScm.Buckets.Bucket! source) -> void
AmpScm.Buckets.Cryptography.SignatureBucket.VerifyAsync(AmpScm.Buckets.Bucket! sourceData, AmpScm.Buckets.Cryptography.PublicKeySignature? key) -> System.Threading.Tasks.ValueTask<bool>
override AmpScm.Buckets.Cryptography.PublicKeySignature.GetValues(bool includePrivate = false) -> System.Collections.Generic.IReadOnlyList<System.Numerics.BigInteger>!
override AmpScm.Buckets.Cryptography.PublicKeySignature.MatchesFingerprint(System.ReadOnlyMemory<byte> fingerprint, AmpScm.Buckets.Cryptography.CryptoAlgorithm algorithm = AmpScm.Buckets.Cryptography.CryptoAlgorithm.None, bool requirePrivateKey = false) -> bool
override AmpScm.Buckets.Cryptography.PublicKeySignature.SubKeys.get -> System.Collections.Generic.IEnumerable<AmpScm.Buckets.Cryptography.AsymmetricCryptoKey!>!

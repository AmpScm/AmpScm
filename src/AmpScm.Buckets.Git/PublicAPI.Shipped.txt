#nullable enable
abstract AmpScm.Buckets.Git.GitObjectBucket.ReadTypeAsync() -> System.Threading.Tasks.ValueTask
AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket
AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket.GitCommitReadBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket.ReadAllParentIdsAsync() -> System.Threading.Tasks.ValueTask<System.Collections.Generic.IReadOnlyCollection<AmpScm.Git.GitId!>!>
AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket.ReadAuthorAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Git.GitSignatureRecord!>
AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket.ReadCommitter() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Git.GitSignatureRecord!>
AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket.ReadFirstParentIdAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Git.GitId?>
AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket.ReadTreeIdAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Git.GitId!>
AmpScm.Buckets.Git.GitBitmapHeaderBucket
AmpScm.Buckets.Git.GitBitmapHeaderBucket.BitmapType.get -> string?
AmpScm.Buckets.Git.GitBitmapHeaderBucket.Flags.get -> int?
AmpScm.Buckets.Git.GitBitmapHeaderBucket.GitBitmapHeaderBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitBitmapHeaderBucket.ObjectCount.get -> int?
AmpScm.Buckets.Git.GitBitmapHeaderBucket.Version.get -> int?
AmpScm.Buckets.Git.GitBucket
AmpScm.Buckets.Git.GitBucket.GitBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitBucketException
AmpScm.Buckets.Git.GitBucketException.GitBucketException() -> void
AmpScm.Buckets.Git.GitBucketException.GitBucketException(string! message) -> void
AmpScm.Buckets.Git.GitBucketException.GitBucketException(string? message, System.Exception? innerException) -> void
AmpScm.Buckets.Git.GitBucketException.GitBucketException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
AmpScm.Buckets.Git.GitCommitGenerationValue
AmpScm.Buckets.Git.GitCommitGenerationValue.CorrectedTime.get -> System.DateTimeOffset
AmpScm.Buckets.Git.GitCommitGenerationValue.CorrectedTimeValue.get -> long
AmpScm.Buckets.Git.GitCommitGenerationValue.Equals(AmpScm.Buckets.Git.GitCommitGenerationValue other) -> bool
AmpScm.Buckets.Git.GitCommitGenerationValue.Generation.get -> int
AmpScm.Buckets.Git.GitCommitGenerationValue.GitCommitGenerationValue() -> void
AmpScm.Buckets.Git.GitCommitGenerationValue.GitCommitGenerationValue(int generation, long timeValue) -> void
AmpScm.Buckets.Git.GitCommitGenerationValue.GitCommitGenerationValue(int generation, System.DateTimeOffset timeStamp) -> void
AmpScm.Buckets.Git.GitCommitGenerationValue.HasValue.get -> bool
AmpScm.Buckets.Git.GitCommitGenerationValue.Value.get -> ulong
AmpScm.Buckets.Git.GitConfigurationItem
AmpScm.Buckets.Git.GitConfigurationItem.CompareTo(AmpScm.Buckets.Git.GitConfigurationItem? other) -> int
AmpScm.Buckets.Git.GitConfigurationItem.Group.get -> string!
AmpScm.Buckets.Git.GitConfigurationItem.Group.set -> void
AmpScm.Buckets.Git.GitConfigurationItem.Key.get -> string!
AmpScm.Buckets.Git.GitConfigurationItem.Key.set -> void
AmpScm.Buckets.Git.GitConfigurationItem.SubGroup.get -> string?
AmpScm.Buckets.Git.GitConfigurationItem.SubGroup.set -> void
AmpScm.Buckets.Git.GitConfigurationItem.Value.get -> string?
AmpScm.Buckets.Git.GitConfigurationItem.Value.set -> void
AmpScm.Buckets.Git.GitConfigurationReaderBucket
AmpScm.Buckets.Git.GitConfigurationReaderBucket.GitConfigurationReaderBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitConfigurationReaderBucket.ReadConfigItem() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Git.GitConfigurationItem?>
AmpScm.Buckets.Git.GitDeltaBucket
AmpScm.Buckets.Git.GitDeltaBucket.GitDeltaBucket(AmpScm.Buckets.Bucket! source, AmpScm.Buckets.Bucket! baseBucket) -> void
AmpScm.Buckets.Git.GitDeltaBucket.PollAsync(int minRequested = 1) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
AmpScm.Buckets.Git.GitEwahBitmapBucket
AmpScm.Buckets.Git.GitEwahBitmapBucket.GitEwahBitmapBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitEwahBitmapBucket.ReadBitLengthAsync() -> System.Threading.Tasks.ValueTask<int>
AmpScm.Buckets.Git.GitObjectBucket
AmpScm.Buckets.Git.GitObjectBucket.GitObjectBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitObjectBucket.Type.get -> AmpScm.Git.GitObjectType
AmpScm.Buckets.Git.GitObjectBucket.Type.set -> void
AmpScm.Buckets.Git.GitObjectFileBucket
AmpScm.Buckets.Git.GitObjectFileBucket.GitObjectFileBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitPacketBucket
AmpScm.Buckets.Git.GitPacketBucket.CurrentPacketLength.get -> int
AmpScm.Buckets.Git.GitPacketBucket.GitPacketBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitPacketBucket.ReadFullPacket() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
AmpScm.Buckets.Git.GitPackFrameBucket
AmpScm.Buckets.Git.GitPackFrameBucket.BodySize.get -> long?
AmpScm.Buckets.Git.GitPackFrameBucket.DeltaCount.get -> int?
AmpScm.Buckets.Git.GitPackFrameBucket.GitPackFrameBucket(AmpScm.Buckets.Bucket! inner, AmpScm.Git.GitIdType idType, System.Func<AmpScm.Git.GitId!, System.Threading.Tasks.ValueTask<AmpScm.Buckets.Git.GitObjectBucket?>>? fetchBucketById = null) -> void
AmpScm.Buckets.Git.GitPackFrameBucket.ReadInfoAsync() -> System.Threading.Tasks.ValueTask<bool>
AmpScm.Buckets.Git.GitPackHeaderBucket
AmpScm.Buckets.Git.GitPackHeaderBucket.GitPackHeaderBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitPackHeaderBucket.GitType.get -> string?
AmpScm.Buckets.Git.GitPackHeaderBucket.ObjectCount.get -> long?
AmpScm.Buckets.Git.GitPackHeaderBucket.Version.get -> int?
AmpScm.Buckets.Git.GitReferenceLogBucket
AmpScm.Buckets.Git.GitReferenceLogBucket.GitReferenceLogBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitReferenceLogBucket.ReadGitReferenceLogRecordAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Git.GitReferenceLogRecord?>
AmpScm.Buckets.Git.GitReferenceLogRecord
AmpScm.Buckets.Git.GitReferenceLogRecord.Original.get -> AmpScm.Git.GitId!
AmpScm.Buckets.Git.GitReferenceLogRecord.Original.init -> void
AmpScm.Buckets.Git.GitReferenceLogRecord.Signature.get -> AmpScm.Buckets.Git.GitSignatureRecord!
AmpScm.Buckets.Git.GitReferenceLogRecord.Signature.init -> void
AmpScm.Buckets.Git.GitReferenceLogRecord.Summary.get -> string?
AmpScm.Buckets.Git.GitReferenceLogRecord.Summary.init -> void
AmpScm.Buckets.Git.GitReferenceLogRecord.Target.get -> AmpScm.Git.GitId!
AmpScm.Buckets.Git.GitReferenceLogRecord.Target.init -> void
AmpScm.Buckets.Git.GitSignatureRecord
AmpScm.Buckets.Git.GitSignatureRecord.Email.get -> string!
AmpScm.Buckets.Git.GitSignatureRecord.Email.init -> void
AmpScm.Buckets.Git.GitSignatureRecord.Name.get -> string!
AmpScm.Buckets.Git.GitSignatureRecord.Name.init -> void
AmpScm.Buckets.Git.GitSignatureRecord.When.get -> System.DateTimeOffset
AmpScm.Buckets.Git.GitSignatureRecord.When.init -> void
AmpScm.Buckets.Git.Objects.GitTreeElementRecord
AmpScm.Buckets.Git.Objects.GitTreeElementRecord.AsBucket() -> AmpScm.Buckets.Bucket!
AmpScm.Buckets.Git.Objects.GitTreeElementRecord.Id.get -> AmpScm.Git.GitId!
AmpScm.Buckets.Git.Objects.GitTreeElementRecord.Id.init -> void
AmpScm.Buckets.Git.Objects.GitTreeElementRecord.Name.get -> string!
AmpScm.Buckets.Git.Objects.GitTreeElementRecord.Name.init -> void
AmpScm.Buckets.Git.Objects.GitTreeElementRecord.Type.get -> AmpScm.Buckets.Git.Objects.GitTreeElementType
AmpScm.Buckets.Git.Objects.GitTreeElementRecord.Type.init -> void
AmpScm.Buckets.Git.Objects.GitTreeElementType
AmpScm.Buckets.Git.Objects.GitTreeElementType.Directory = 16384 -> AmpScm.Buckets.Git.Objects.GitTreeElementType
AmpScm.Buckets.Git.Objects.GitTreeElementType.File = 33188 -> AmpScm.Buckets.Git.Objects.GitTreeElementType
AmpScm.Buckets.Git.Objects.GitTreeElementType.FileExecutable = 33261 -> AmpScm.Buckets.Git.Objects.GitTreeElementType
AmpScm.Buckets.Git.Objects.GitTreeElementType.GitCommitLink = 57344 -> AmpScm.Buckets.Git.Objects.GitTreeElementType
AmpScm.Buckets.Git.Objects.GitTreeElementType.None = 0 -> AmpScm.Buckets.Git.Objects.GitTreeElementType
AmpScm.Buckets.Git.Objects.GitTreeElementType.SymbolicLink = 40960 -> AmpScm.Buckets.Git.Objects.GitTreeElementType
AmpScm.Buckets.Git.Objects.GitTreeReadBucket
AmpScm.Buckets.Git.Objects.GitTreeReadBucket.GitTreeReadBucket(AmpScm.Buckets.Bucket! inner, AmpScm.Git.GitIdType idType) -> void
AmpScm.Buckets.Git.Objects.GitTreeReadBucket.ReadTreeElementRecord() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Git.Objects.GitTreeElementRecord?>
AmpScm.Git.GitBucketExtensions
AmpScm.Git.GitException
AmpScm.Git.GitException.GitException() -> void
AmpScm.Git.GitException.GitException(string! message) -> void
AmpScm.Git.GitException.GitException(string? message, System.Exception? innerException) -> void
AmpScm.Git.GitException.GitException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
AmpScm.Git.GitId
AmpScm.Git.GitId.CompareTo(AmpScm.Git.GitId? other) -> int
AmpScm.Git.GitId.Equals(AmpScm.Git.GitId? other) -> bool
AmpScm.Git.GitId.GitId(AmpScm.Git.GitIdType type, byte[]! hash) -> void
AmpScm.Git.GitId.Hash.get -> System.ReadOnlyMemory<byte>
AmpScm.Git.GitId.HashCompare(AmpScm.Git.GitId! other) -> int
AmpScm.Git.GitId.this[int index].get -> byte
AmpScm.Git.GitId.ToString(string? format) -> string!
AmpScm.Git.GitId.Type.get -> AmpScm.Git.GitIdType
AmpScm.Git.GitIdType
AmpScm.Git.GitIdType.None = 0 -> AmpScm.Git.GitIdType
AmpScm.Git.GitIdType.Sha1 = 1 -> AmpScm.Git.GitIdType
AmpScm.Git.GitIdType.Sha256 = 2 -> AmpScm.Git.GitIdType
AmpScm.Git.GitObjectType
AmpScm.Git.GitObjectType.Blob = 3 -> AmpScm.Git.GitObjectType
AmpScm.Git.GitObjectType.Commit = 1 -> AmpScm.Git.GitObjectType
AmpScm.Git.GitObjectType.None = 0 -> AmpScm.Git.GitObjectType
AmpScm.Git.GitObjectType.Tag = 4 -> AmpScm.Git.GitObjectType
AmpScm.Git.GitObjectType.Tree = 2 -> AmpScm.Git.GitObjectType
override AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Git.Buckets.Objects.GitCommitReadBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitBitmapHeaderBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitCommitGenerationValue.Equals(object? obj) -> bool
override AmpScm.Buckets.Git.GitCommitGenerationValue.GetHashCode() -> int
override AmpScm.Buckets.Git.GitConfigurationItem.ToString() -> string!
override AmpScm.Buckets.Git.GitConfigurationReaderBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitDeltaBucket.CanReset.get -> bool
override AmpScm.Buckets.Git.GitDeltaBucket.Name.get -> string!
override AmpScm.Buckets.Git.GitDeltaBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Git.GitDeltaBucket.Position.get -> long?
override AmpScm.Buckets.Git.GitDeltaBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitDeltaBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Git.GitDeltaBucket.ReadSkipAsync(int requested) -> System.Threading.Tasks.ValueTask<int>
override AmpScm.Buckets.Git.GitDeltaBucket.ResetAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Git.GitEwahBitmapBucket.CanReset.get -> bool
override AmpScm.Buckets.Git.GitEwahBitmapBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Git.GitEwahBitmapBucket.Position.get -> long?
override AmpScm.Buckets.Git.GitEwahBitmapBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitEwahBitmapBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Git.GitEwahBitmapBucket.ResetAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Git.GitObjectFileBucket.CanReset.get -> bool
override AmpScm.Buckets.Git.GitObjectFileBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Git.GitObjectFileBucket.Position.get -> long?
override AmpScm.Buckets.Git.GitObjectFileBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitObjectFileBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Git.GitObjectFileBucket.ReadTypeAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Git.GitObjectFileBucket.ResetAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Git.GitPacketBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitPackFrameBucket.CanReset.get -> bool
override AmpScm.Buckets.Git.GitPackFrameBucket.Name.get -> string!
override AmpScm.Buckets.Git.GitPackFrameBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Git.GitPackFrameBucket.Position.get -> long?
override AmpScm.Buckets.Git.GitPackFrameBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitPackFrameBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Git.GitPackFrameBucket.ReadSkipAsync(int requested) -> System.Threading.Tasks.ValueTask<int>
override AmpScm.Buckets.Git.GitPackFrameBucket.ReadTypeAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Git.GitPackFrameBucket.ResetAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Git.GitPackHeaderBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitReferenceLogBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Git.GitSignatureRecord.ToString() -> string!
override AmpScm.Buckets.Git.Objects.GitTreeReadBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Git.GitId.Equals(object? obj) -> bool
override AmpScm.Git.GitId.GetHashCode() -> int
override AmpScm.Git.GitId.ToString() -> string!
static AmpScm.Buckets.Git.GitCommitGenerationValue.FromValue(ulong value) -> AmpScm.Buckets.Git.GitCommitGenerationValue
static AmpScm.Buckets.Git.GitCommitGenerationValue.operator !=(AmpScm.Buckets.Git.GitCommitGenerationValue left, AmpScm.Buckets.Git.GitCommitGenerationValue right) -> bool
static AmpScm.Buckets.Git.GitCommitGenerationValue.operator ==(AmpScm.Buckets.Git.GitCommitGenerationValue left, AmpScm.Buckets.Git.GitCommitGenerationValue right) -> bool
static AmpScm.Buckets.Git.GitConfigurationItem.operator <(AmpScm.Buckets.Git.GitConfigurationItem! left, AmpScm.Buckets.Git.GitConfigurationItem! right) -> bool
static AmpScm.Buckets.Git.GitConfigurationItem.operator <=(AmpScm.Buckets.Git.GitConfigurationItem! left, AmpScm.Buckets.Git.GitConfigurationItem! right) -> bool
static AmpScm.Buckets.Git.GitConfigurationItem.operator >(AmpScm.Buckets.Git.GitConfigurationItem! left, AmpScm.Buckets.Git.GitConfigurationItem! right) -> bool
static AmpScm.Buckets.Git.GitConfigurationItem.operator >=(AmpScm.Buckets.Git.GitConfigurationItem! left, AmpScm.Buckets.Git.GitConfigurationItem! right) -> bool
static AmpScm.Buckets.Git.GitSignatureRecord.TryReadFromBucket(AmpScm.Buckets.BucketBytes bucketBytes, out AmpScm.Buckets.Git.GitSignatureRecord? record) -> bool
static AmpScm.Git.GitBucketExtensions.CreateHeader(this AmpScm.Git.GitObjectType type, long length) -> AmpScm.Buckets.Bucket!
static AmpScm.Git.GitBucketExtensions.HashLength(this AmpScm.Git.GitIdType type) -> int
static AmpScm.Git.GitBucketExtensions.Slice(this AmpScm.Buckets.BucketBytes bb, AmpScm.Buckets.BucketEol untilEol) -> AmpScm.Buckets.BucketBytes
static AmpScm.Git.GitBucketExtensions.Slice(this AmpScm.Buckets.BucketBytes bb, int start, AmpScm.Buckets.BucketEol untilEol) -> AmpScm.Buckets.BucketBytes
static AmpScm.Git.GitId.FromByteArrayOffset(AmpScm.Git.GitIdType type, byte[]! hash, int offset) -> AmpScm.Git.GitId!
static AmpScm.Git.GitId.HashLength(AmpScm.Git.GitIdType type) -> int
static AmpScm.Git.GitId.operator !=(AmpScm.Git.GitId? one, AmpScm.Git.GitId? other) -> bool
static AmpScm.Git.GitId.operator <(AmpScm.Git.GitId! left, AmpScm.Git.GitId! right) -> bool
static AmpScm.Git.GitId.operator <=(AmpScm.Git.GitId! left, AmpScm.Git.GitId! right) -> bool
static AmpScm.Git.GitId.operator ==(AmpScm.Git.GitId? one, AmpScm.Git.GitId? other) -> bool
static AmpScm.Git.GitId.operator >(AmpScm.Git.GitId! left, AmpScm.Git.GitId! right) -> bool
static AmpScm.Git.GitId.operator >=(AmpScm.Git.GitId! left, AmpScm.Git.GitId! right) -> bool
static AmpScm.Git.GitId.Parse(string! idString) -> AmpScm.Git.GitId!
static AmpScm.Git.GitId.StringToByteArray(string! hex) -> byte[]!
static AmpScm.Git.GitId.TryParse(AmpScm.Buckets.BucketBytes idBuffer, out AmpScm.Git.GitId? id) -> bool
static AmpScm.Git.GitId.TryParse(string! idString, out AmpScm.Git.GitId? id) -> bool
static readonly AmpScm.Git.GitId.MaxHashLength -> int

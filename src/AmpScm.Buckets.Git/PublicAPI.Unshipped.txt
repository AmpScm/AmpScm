#nullable enable
AmpScm.Buckets.Git.GitBucketEofException
AmpScm.Buckets.Git.GitBucketEofException.GitBucketEofException() -> void
AmpScm.Buckets.Git.GitBucketEofException.GitBucketEofException(string! message) -> void
AmpScm.Buckets.Git.GitBucketEofException.GitBucketEofException(string! message, System.Exception! innerException) -> void
AmpScm.Buckets.Git.GitBucketEofException.GitBucketEofException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
AmpScm.Buckets.Git.GitDeltaBucket.GitDeltaBucket(AmpScm.Buckets.Bucket! source, AmpScm.Buckets.Git.GitObjectBucket! baseBucket) -> void
AmpScm.Buckets.Git.GitDirectoryBucket
AmpScm.Buckets.Git.GitDirectoryBucket.GitDirectoryBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Git.GitDirectoryBucket.GitDirectoryBucket(AmpScm.Buckets.Bucket! inner, AmpScm.Buckets.Git.GitDirectoryOptions? options) -> void
AmpScm.Buckets.Git.GitDirectoryBucket.GitDirectoryBucket(string! gitDirectory) -> void
AmpScm.Buckets.Git.GitDirectoryBucket.GitDirectoryBucket(string! gitDirectory, AmpScm.Buckets.Git.GitDirectoryOptions? options) -> void
AmpScm.Buckets.Git.GitDirectoryBucket.IndexVersion.get -> int?
AmpScm.Buckets.Git.GitDirectoryBucket.ProcessExtensionsAsync() -> System.Threading.Tasks.ValueTask
AmpScm.Buckets.Git.GitDirectoryBucket.ReadEntryAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Git.GitDirectoryEntry?>
AmpScm.Buckets.Git.GitDirectoryBucket.ReadHeaderAsync() -> System.Threading.Tasks.ValueTask
AmpScm.Buckets.Git.GitDirectoryEntry
AmpScm.Buckets.Git.GitDirectoryEntry.CompareTo(AmpScm.Buckets.Git.GitDirectoryEntry? other) -> int
AmpScm.Buckets.Git.GitDirectoryEntry.CreationTime.get -> System.DateTime
AmpScm.Buckets.Git.GitDirectoryEntry.DeviceId.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.DeviceId.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.Flags.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.Flags.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.GroupId.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.GroupId.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.Id.get -> AmpScm.Git.GitId!
AmpScm.Buckets.Git.GitDirectoryEntry.Id.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.INodeId.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.INodeId.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.ModificationTime.get -> System.DateTime
AmpScm.Buckets.Git.GitDirectoryEntry.Name.get -> string!
AmpScm.Buckets.Git.GitDirectoryEntry.Name.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.Stage.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.TruncatedFileSize.get -> uint
AmpScm.Buckets.Git.GitDirectoryEntry.TruncatedFileSize.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.Type.get -> AmpScm.Git.GitTreeElementType
AmpScm.Buckets.Git.GitDirectoryEntry.Type.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.UnixCreationTime.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.UnixCreationTime.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.UnixCreationTimeNano.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.UnixCreationTimeNano.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.UnixModificationTime.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.UnixModificationTime.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.UnixModificationTimeNano.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.UnixModificationTimeNano.init -> void
AmpScm.Buckets.Git.GitDirectoryEntry.UserId.get -> int
AmpScm.Buckets.Git.GitDirectoryEntry.UserId.init -> void
AmpScm.Buckets.Git.GitDirectoryOptions
AmpScm.Buckets.Git.GitDirectoryOptions.GitDirectoryOptions() -> void
AmpScm.Buckets.Git.GitDirectoryOptions.IdType.get -> AmpScm.Git.GitIdType
AmpScm.Buckets.Git.GitDirectoryOptions.IdType.set -> void
AmpScm.Buckets.Git.GitDirectoryOptions.LookForEndOfIndex.get -> bool
AmpScm.Buckets.Git.GitDirectoryOptions.LookForEndOfIndex.set -> void
AmpScm.Buckets.Git.GitDirectoryOptions.PreLoadExtensions.get -> bool
AmpScm.Buckets.Git.GitDirectoryOptions.PreLoadExtensions.set -> void
AmpScm.Buckets.Git.GitEwahBitmapBucket.AllBits.get -> System.Collections.Generic.IAsyncEnumerable<bool>!
AmpScm.Buckets.Git.GitEwahBitmapBucket.ReadLengthAsync() -> System.Threading.Tasks.ValueTask<int>
AmpScm.Buckets.Git.GitEwahBitmapBucket.SetIndexes.get -> System.Collections.Generic.IAsyncEnumerable<int>!
override AmpScm.Buckets.Git.GitDeltaBucket.ReadTypeAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Git.GitObjectType>
override AmpScm.Buckets.Git.GitDirectoryBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
static AmpScm.Buckets.Git.GitBucketEofException.Throw(AmpScm.Buckets.Bucket! bucket) -> AmpScm.Buckets.Git.GitBucketEofException!
static AmpScm.Buckets.Git.GitCommitGenerationValue.FromValue(ulong value, long offset) -> AmpScm.Buckets.Git.GitCommitGenerationValue
static AmpScm.Buckets.Git.GitDirectoryEntry.operator <(AmpScm.Buckets.Git.GitDirectoryEntry! left, AmpScm.Buckets.Git.GitDirectoryEntry! right) -> bool
static AmpScm.Buckets.Git.GitDirectoryEntry.operator <=(AmpScm.Buckets.Git.GitDirectoryEntry! left, AmpScm.Buckets.Git.GitDirectoryEntry! right) -> bool
static AmpScm.Buckets.Git.GitDirectoryEntry.operator >(AmpScm.Buckets.Git.GitDirectoryEntry! left, AmpScm.Buckets.Git.GitDirectoryEntry! right) -> bool
static AmpScm.Buckets.Git.GitDirectoryEntry.operator >=(AmpScm.Buckets.Git.GitDirectoryEntry! left, AmpScm.Buckets.Git.GitDirectoryEntry! right) -> bool
static AmpScm.Git.GitBucketExtensions.GitHash(this AmpScm.Buckets.Bucket! bucket, AmpScm.Git.GitIdType type, System.Action<AmpScm.Git.GitId!>! created) -> AmpScm.Buckets.Bucket!
static AmpScm.Git.GitBucketExtensions.IsDirectory(this AmpScm.Git.GitTreeElementType elementType) -> bool
static AmpScm.Git.GitBucketExtensions.IsFile(this AmpScm.Git.GitTreeElementType elementType) -> bool
static AmpScm.Git.GitBucketExtensions.ReadGitIdAsync(this AmpScm.Buckets.Bucket! bucket, AmpScm.Git.GitIdType type) -> System.Threading.Tasks.ValueTask<AmpScm.Git.GitId!>
static AmpScm.Git.GitBucketExtensions.ReadGitOffsetAsync(this AmpScm.Buckets.Bucket! bucket) -> System.Threading.Tasks.ValueTask<long>
static readonly AmpScm.Buckets.Git.GitDirectoryBucket.HighestSupportedFormat -> int
static readonly AmpScm.Buckets.Git.GitDirectoryBucket.LowestSupportedFormat -> int

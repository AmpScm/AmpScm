#nullable enable
abstract AmpScm.Buckets.Client.BucketWebRequest.GetResponseAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Client.ResponseBucket!>
AmpScm.Buckets.BucketBytes.StartsWithASCII(string! value) -> bool
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs.Password.get -> string?
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs.Password.set -> void
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs.Username.get -> string?
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs.Username.set -> void
AmpScm.Buckets.Client.BucketAuthenticationEventArgs
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Continue.get -> bool
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Continue.set -> void
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Failed -> System.EventHandler<AmpScm.Buckets.Client.BucketAuthenticationEventArgs!>?
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Handled.get -> bool
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Handled.set -> void
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Items.get -> System.Collections.Hashtable!
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Realm.get -> string!
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Succeeded -> System.EventHandler<AmpScm.Buckets.Client.BucketAuthenticationEventArgs!>?
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Uri.get -> System.Uri!
AmpScm.Buckets.Client.BucketClientException
AmpScm.Buckets.Client.BucketClientException.BucketClientException() -> void
AmpScm.Buckets.Client.BucketClientException.BucketClientException(string! message) -> void
AmpScm.Buckets.Client.BucketClientException.BucketClientException(string! message, System.Exception! innerException) -> void
AmpScm.Buckets.Client.BucketClientException.BucketClientException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
AmpScm.Buckets.Client.BucketWebClient
AmpScm.Buckets.Client.BucketWebClient.BasicAuthentication -> System.EventHandler<AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs!>?
AmpScm.Buckets.Client.BucketWebClient.BucketWebClient() -> void
AmpScm.Buckets.Client.BucketWebClient.CreateRequest(string! url) -> AmpScm.Buckets.Client.BucketWebRequest!
AmpScm.Buckets.Client.BucketWebClient.CreateRequest(System.Uri! requestUri) -> AmpScm.Buckets.Client.BucketWebRequest!
AmpScm.Buckets.Client.BucketWebClient.Dispose() -> void
AmpScm.Buckets.Client.BucketWebRequest
AmpScm.Buckets.Client.BucketWebRequest.BasicAuthentication -> System.EventHandler<AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs!>?
AmpScm.Buckets.Client.BucketWebRequest.BucketWebRequest(AmpScm.Buckets.Client.BucketWebClient! client, System.Uri! requestUri) -> void
AmpScm.Buckets.Client.BucketWebRequest.Client.get -> AmpScm.Buckets.Client.BucketWebClient!
AmpScm.Buckets.Client.BucketWebRequest.ContentLength.get -> long?
AmpScm.Buckets.Client.BucketWebRequest.ContentLength.set -> void
AmpScm.Buckets.Client.BucketWebRequest.ContentType.get -> string?
AmpScm.Buckets.Client.BucketWebRequest.ContentType.set -> void
AmpScm.Buckets.Client.BucketWebRequest.FollowRedirects.get -> bool
AmpScm.Buckets.Client.BucketWebRequest.FollowRedirects.set -> void
AmpScm.Buckets.Client.BucketWebRequest.Headers.get -> AmpScm.Buckets.Client.WebHeaderDictionary!
AmpScm.Buckets.Client.BucketWebRequest.PreAuthenticate.get -> bool
AmpScm.Buckets.Client.BucketWebRequest.PreAuthenticate.set -> void
AmpScm.Buckets.Client.BucketWebRequest.RequestUri.get -> System.Uri!
AmpScm.Buckets.Client.Http.HttpResponseBucket
AmpScm.Buckets.Client.Http.HttpResponseBucket.HttpMessage.get -> string?
AmpScm.Buckets.Client.Http.HttpResponseBucket.HttpStatus.get -> int?
AmpScm.Buckets.Client.Http.HttpResponseBucket.HttpVersion.get -> string?
AmpScm.Buckets.Client.Http.HttpResponseBucket.ReadStatusAsync() -> System.Threading.Tasks.ValueTask<int>
AmpScm.Buckets.Client.Http.HttpResponseBucket.Request.get -> AmpScm.Buckets.Client.Protocols.HttpBucketRequest!
AmpScm.Buckets.Client.Protocols.HttpBucketRequest
AmpScm.Buckets.Client.ResponseBucket
AmpScm.Buckets.Client.ResponseBucket.Request.get -> AmpScm.Buckets.Client.BucketWebRequest!
AmpScm.Buckets.Client.ResponseBucket.ResponseBucket(AmpScm.Buckets.Bucket! inner, AmpScm.Buckets.Client.BucketWebRequest! request) -> void
AmpScm.Buckets.Client.WebHeaderDictionary
AmpScm.Buckets.Client.WebHeaderDictionary.Contains(string! header) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.Contains(System.Net.HttpRequestHeader requestHeader) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.Contains(System.Net.HttpResponseHeader responseHeader) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.GetEnumerator() -> System.Collections.Generic.IEnumerator<string!>!
AmpScm.Buckets.Client.WebHeaderDictionary.Keys.get -> AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection!
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Add(string! item) -> void
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Clear() -> void
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Contains(string! item) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.CopyTo(string![]! array, int arrayIndex) -> void
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Count.get -> int
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<string!>!
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.IsReadOnly.get -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Remove(string! item) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.this[int index].get -> string!
AmpScm.Buckets.Client.WebHeaderDictionary.WebHeaderDictionary() -> void
AmpScm.Buckets.FileBucket.FileBucket(string! path, int bufferSize = 8192, int chunkSize = 4096) -> void
AmpScm.Buckets.FileBucket.ReadAtAsync(long fileOffset, byte[]! buffer) -> System.Threading.Tasks.ValueTask<int>
AmpScm.Buckets.FileBucket.ReadAtAsync(long fileOffset, byte[]! buffer, int requested) -> System.Threading.Tasks.ValueTask<int>
AmpScm.Buckets.HttpBucketException
AmpScm.Buckets.HttpBucketException.HttpBucketException() -> void
AmpScm.Buckets.HttpBucketException.HttpBucketException(string! message) -> void
AmpScm.Buckets.HttpBucketException.HttpBucketException(string? message, System.Exception? innerException) -> void
AmpScm.Buckets.HttpBucketException.HttpBucketException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
AmpScm.Buckets.Interfaces.IBucketNoClose
AmpScm.Buckets.Interfaces.IBucketNoClose.NoClose() -> AmpScm.Buckets.Bucket!
AmpScm.Buckets.Interfaces.IBucketPoll
AmpScm.Buckets.Interfaces.IBucketPoll.PollAsync(int minRequested = 1) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
AmpScm.Buckets.Interfaces.IBucketReadBuffers
AmpScm.Buckets.Interfaces.IBucketReadBuffers.ReadBuffersAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<(System.ReadOnlyMemory<byte>[]! Buffers, bool Done)>
AmpScm.Buckets.Interfaces.IBucketSeek
AmpScm.Buckets.Interfaces.IBucketSeek.SeekAsync(long newPosition) -> System.Threading.Tasks.ValueTask
AmpScm.Buckets.Interfaces.IBucketWriter
AmpScm.Buckets.Interfaces.IBucketWriter.ShutdownAsync() -> System.Threading.Tasks.ValueTask
AmpScm.Buckets.Interfaces.IBucketWriter.Write(AmpScm.Buckets.Bucket! bucket) -> void
AmpScm.Buckets.Interfaces.IBucketWriterStats
AmpScm.Buckets.Interfaces.IBucketWriterStats.BytesWritten.get -> long
AmpScm.Buckets.Specialized.BitwiseAndBucket
AmpScm.Buckets.Specialized.BitwiseAndBucket.BitwiseAndBucket(AmpScm.Buckets.Bucket! left, AmpScm.Buckets.Bucket! right) -> void
AmpScm.Buckets.Specialized.BitwiseNotBucket
AmpScm.Buckets.Specialized.BitwiseNotBucket.BitwiseNotBucket(AmpScm.Buckets.Bucket! inner, int bufferSize = 4096) -> void
AmpScm.Buckets.Specialized.BitwiseOrBucket
AmpScm.Buckets.Specialized.BitwiseOrBucket.BitwiseOrBucket(AmpScm.Buckets.Bucket! left, AmpScm.Buckets.Bucket! right) -> void
AmpScm.Buckets.Specialized.BitwiseXorBucket
AmpScm.Buckets.Specialized.BitwiseXorBucket.BitwiseXorBucket(AmpScm.Buckets.Bucket! left, AmpScm.Buckets.Bucket! right) -> void
AmpScm.Buckets.Specialized.BucketCompressionAlgorithm
AmpScm.Buckets.Specialized.BucketCompressionAlgorithm.Brotli = 3 -> AmpScm.Buckets.Specialized.BucketCompressionAlgorithm
AmpScm.Buckets.Specialized.BucketCompressionAlgorithm.Deflate = 0 -> AmpScm.Buckets.Specialized.BucketCompressionAlgorithm
AmpScm.Buckets.Specialized.BucketCompressionAlgorithm.GZip = 2 -> AmpScm.Buckets.Specialized.BucketCompressionAlgorithm
AmpScm.Buckets.Specialized.BucketCompressionAlgorithm.ZLib = 1 -> AmpScm.Buckets.Specialized.BucketCompressionAlgorithm
AmpScm.Buckets.Specialized.BucketExtensions
override AmpScm.Buckets.Client.Http.HttpResponseBucket.ContentLength.get -> long
override AmpScm.Buckets.Client.Http.HttpResponseBucket.ContentType.get -> string?
override AmpScm.Buckets.Client.Http.HttpResponseBucket.Headers.get -> AmpScm.Buckets.Client.WebHeaderDictionary!
override AmpScm.Buckets.Client.Http.HttpResponseBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Client.Http.HttpResponseBucket.Position.get -> long?
override AmpScm.Buckets.Client.Http.HttpResponseBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Client.Http.HttpResponseBucket.ReadHeaders() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Client.Http.HttpResponseBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Client.Http.HttpResponseBucket.SupportsHeaders.get -> bool
override AmpScm.Buckets.Client.Protocols.HttpBucketRequest.GetResponseAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Client.ResponseBucket!>
override AmpScm.Buckets.Specialized.BitwiseAndBucket.CanReset.get -> bool
override AmpScm.Buckets.Specialized.BitwiseAndBucket.Name.get -> string!
override AmpScm.Buckets.Specialized.BitwiseAndBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.BitwiseAndBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.BitwiseAndBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.BitwiseAndBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Specialized.BitwiseAndBucket.ReadSkipAsync(long requested) -> System.Threading.Tasks.ValueTask<long>
override AmpScm.Buckets.Specialized.BitwiseAndBucket.ResetAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Specialized.BitwiseNotBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.BitwiseNotBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.BitwiseNotBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.BitwiseNotBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Specialized.BitwiseNotBucket.ReadSkipAsync(long requested) -> System.Threading.Tasks.ValueTask<long>
override AmpScm.Buckets.Specialized.BitwiseOrBucket.CanReset.get -> bool
override AmpScm.Buckets.Specialized.BitwiseOrBucket.Name.get -> string!
override AmpScm.Buckets.Specialized.BitwiseOrBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.BitwiseOrBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.BitwiseOrBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.BitwiseOrBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Specialized.BitwiseOrBucket.ReadSkipAsync(long requested) -> System.Threading.Tasks.ValueTask<long>
override AmpScm.Buckets.Specialized.BitwiseOrBucket.ResetAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Specialized.BitwiseXorBucket.CanReset.get -> bool
override AmpScm.Buckets.Specialized.BitwiseXorBucket.Name.get -> string!
override AmpScm.Buckets.Specialized.BitwiseXorBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.BitwiseXorBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.BitwiseXorBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.BitwiseXorBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Specialized.BitwiseXorBucket.ReadSkipAsync(long requested) -> System.Threading.Tasks.ValueTask<long>
override AmpScm.Buckets.Specialized.BitwiseXorBucket.ResetAsync() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Specialized.TlsBucket.CanReset.get -> bool
override AmpScm.Buckets.Specialized.TlsBucket.Name.get -> string!
override AmpScm.Buckets.Specialized.TlsBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.TlsBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.TlsBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
static AmpScm.Buckets.BucketExtensions.VerifyBehavior<TBucket>(this TBucket! bucket) -> AmpScm.Buckets.Bucket!
static AmpScm.Buckets.BucketExtensions.WithTlsClientFor<TBucket>(this TBucket! bucket, string! targetHost) -> AmpScm.Buckets.Specialized.TlsBucket!
static AmpScm.Buckets.Specialized.SpecializedBucketExtensions.ArrayAppend<T>(this T[]! array, T item) -> T[]!
static AmpScm.Buckets.Specialized.SpecializedBucketExtensions.NormalizeEols(this AmpScm.Buckets.Bucket! bucket, AmpScm.Buckets.BucketEol acceptedEols, AmpScm.Buckets.BucketEol producedEol = AmpScm.Buckets.BucketEol.LF) -> AmpScm.Buckets.Bucket!
static AmpScm.Buckets.Specialized.SpecializedBucketExtensions.NormalizeToUtf8(this AmpScm.Buckets.Bucket! bucket) -> AmpScm.Buckets.Bucket!
static AmpScm.Buckets.Specialized.SpecializedBucketExtensions.NormalizeToUtf8(this AmpScm.Buckets.Bucket! bucket, System.Text.Encoding! fallbackEncoding) -> AmpScm.Buckets.Bucket!
static AmpScm.Buckets.Specialized.SpecializedBucketExtensions.SHA512(this AmpScm.Buckets.Bucket! bucket, System.Action<byte[]!>! created) -> AmpScm.Buckets.Bucket!
virtual AmpScm.Buckets.Client.BucketWebClient.Dispose(bool disposing) -> void
virtual AmpScm.Buckets.Client.BucketWebRequest.Method.get -> string?
virtual AmpScm.Buckets.Client.BucketWebRequest.Method.set -> void
virtual AmpScm.Buckets.Client.ResponseBucket.ContentLength.get -> long
virtual AmpScm.Buckets.Client.ResponseBucket.ContentType.get -> string?
virtual AmpScm.Buckets.Client.ResponseBucket.Headers.get -> AmpScm.Buckets.Client.WebHeaderDictionary!
virtual AmpScm.Buckets.Client.ResponseBucket.ReadHeaders() -> System.Threading.Tasks.ValueTask
virtual AmpScm.Buckets.Client.ResponseBucket.SupportsHeaders.get -> bool

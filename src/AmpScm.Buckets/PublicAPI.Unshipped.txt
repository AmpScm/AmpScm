#nullable enable
abstract AmpScm.Buckets.Client.BucketWebRequest.GetResponseAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Client.ResponseBucket!>
abstract AmpScm.Buckets.Specialized.ConversionBucket.ConvertData(ref AmpScm.Buckets.BucketBytes sourceData, bool final) -> AmpScm.Buckets.BucketBytes
AmpScm.Buckets.AggregateBucket.HasMoreClosers() -> bool
AmpScm.Buckets.AggregateBucket.NoClose() -> void
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs.Password.get -> string?
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs.Password.set -> void
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs.Username.get -> string?
AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs.Username.set -> void
AmpScm.Buckets.Client.BucketAuthenticationEventArgs
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Continue.get -> bool
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Continue.set -> void
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Failed -> System.EventHandler<AmpScm.Buckets.Client.BucketAuthenticationEventArgs!>?
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Handled.get -> bool
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Handled.set -> void
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Items.get -> System.Collections.Hashtable!
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Realm.get -> string!
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Succeeded -> System.EventHandler<AmpScm.Buckets.Client.BucketAuthenticationEventArgs!>?
AmpScm.Buckets.Client.BucketAuthenticationEventArgs.Uri.get -> System.Uri!
AmpScm.Buckets.Client.BucketClientException
AmpScm.Buckets.Client.BucketClientException.BucketClientException() -> void
AmpScm.Buckets.Client.BucketClientException.BucketClientException(string! message) -> void
AmpScm.Buckets.Client.BucketClientException.BucketClientException(string! message, System.Exception! innerException) -> void
AmpScm.Buckets.Client.BucketClientException.BucketClientException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
AmpScm.Buckets.Client.BucketHttpClientExtensions
AmpScm.Buckets.Client.Buckets.HttpResponseBucket
AmpScm.Buckets.Client.Buckets.HttpResponseBucket.HttpMessage.get -> string?
AmpScm.Buckets.Client.Buckets.HttpResponseBucket.HttpStatus.get -> int?
AmpScm.Buckets.Client.Buckets.HttpResponseBucket.HttpVersion.get -> string?
AmpScm.Buckets.Client.Buckets.HttpResponseBucket.ReadStatusAsync() -> System.Threading.Tasks.ValueTask<int>
AmpScm.Buckets.Client.Buckets.HttpResponseBucket.Request.get -> AmpScm.Buckets.Client.HttpBucketWebRequest!
AmpScm.Buckets.Client.BucketWebClient
AmpScm.Buckets.Client.BucketWebClient.BasicAuthentication -> System.EventHandler<AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs!>?
AmpScm.Buckets.Client.BucketWebClient.BucketWebClient() -> void
AmpScm.Buckets.Client.BucketWebClient.CreateRequest(string! url) -> AmpScm.Buckets.Client.BucketWebRequest!
AmpScm.Buckets.Client.BucketWebClient.CreateRequest(System.Uri! requestUri) -> AmpScm.Buckets.Client.BucketWebRequest!
AmpScm.Buckets.Client.BucketWebClient.Dispose() -> void
AmpScm.Buckets.Client.BucketWebRequest
AmpScm.Buckets.Client.BucketWebRequest.BasicAuthentication -> System.EventHandler<AmpScm.Buckets.Client.BasicBucketAuthenticationEventArgs!>?
AmpScm.Buckets.Client.BucketWebRequest.BucketWebRequest(AmpScm.Buckets.Client.BucketWebClient! client, System.Uri! requestUri) -> void
AmpScm.Buckets.Client.BucketWebRequest.Client.get -> AmpScm.Buckets.Client.BucketWebClient!
AmpScm.Buckets.Client.BucketWebRequest.ContentLength.get -> long?
AmpScm.Buckets.Client.BucketWebRequest.ContentLength.set -> void
AmpScm.Buckets.Client.BucketWebRequest.ContentType.get -> string?
AmpScm.Buckets.Client.BucketWebRequest.ContentType.set -> void
AmpScm.Buckets.Client.BucketWebRequest.FollowRedirects.get -> bool
AmpScm.Buckets.Client.BucketWebRequest.FollowRedirects.set -> void
AmpScm.Buckets.Client.BucketWebRequest.Headers.get -> AmpScm.Buckets.Client.WebHeaderDictionary!
AmpScm.Buckets.Client.BucketWebRequest.PreAuthenticate.get -> bool
AmpScm.Buckets.Client.BucketWebRequest.PreAuthenticate.set -> void
AmpScm.Buckets.Client.BucketWebRequest.RequestUri.get -> System.Uri!
AmpScm.Buckets.Client.HttpBucketWebRequest
AmpScm.Buckets.Client.ResponseBucket
AmpScm.Buckets.Client.ResponseBucket.Request.get -> AmpScm.Buckets.Client.BucketWebRequest!
AmpScm.Buckets.Client.ResponseBucket.ResponseBucket(AmpScm.Buckets.Bucket! inner, AmpScm.Buckets.Client.BucketWebRequest! request) -> void
AmpScm.Buckets.Client.WebHeaderDictionary
AmpScm.Buckets.Client.WebHeaderDictionary.Contains(string! header) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.Contains(System.Net.HttpRequestHeader requestHeader) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.Contains(System.Net.HttpResponseHeader responseHeader) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.GetEnumerator() -> System.Collections.Generic.IEnumerator<string!>!
AmpScm.Buckets.Client.WebHeaderDictionary.Keys.get -> AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection!
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Add(string! item) -> void
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Clear() -> void
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Contains(string! item) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.CopyTo(string![]! array, int arrayIndex) -> void
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Count.get -> int
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<string!>!
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.IsReadOnly.get -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.Remove(string! item) -> bool
AmpScm.Buckets.Client.WebHeaderDictionary.KeysCollection.this[int index].get -> string!
AmpScm.Buckets.Client.WebHeaderDictionary.WebHeaderDictionary() -> void
AmpScm.Buckets.FileBucket.FileBucket(string! path, int bufferSize = 8192, int chunkSize = 4096) -> void
AmpScm.Buckets.FileBucket.Length.get -> long
AmpScm.Buckets.FileBucket.ReadAtAsync(long fileOffset, byte[]! buffer) -> System.Threading.Tasks.ValueTask<int>
AmpScm.Buckets.FileBucket.ReadAtAsync(long fileOffset, byte[]! buffer, int requested) -> System.Threading.Tasks.ValueTask<int>
AmpScm.Buckets.HttpBucketException
AmpScm.Buckets.HttpBucketException.HttpBucketException() -> void
AmpScm.Buckets.HttpBucketException.HttpBucketException(string! message) -> void
AmpScm.Buckets.HttpBucketException.HttpBucketException(string? message, System.Exception? innerException) -> void
AmpScm.Buckets.HttpBucketException.HttpBucketException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
AmpScm.Buckets.Interfaces.IBucketNoClose.HasMoreClosers() -> bool
AmpScm.Buckets.Interfaces.IBucketSeekOnReset
AmpScm.Buckets.Interfaces.IBucketSeekOnReset.SeekOnReset() -> AmpScm.Buckets.Bucket!
AmpScm.Buckets.Interfaces.IBucketWriterStats
AmpScm.Buckets.Interfaces.IBucketWriterStats.BytesWritten.get -> long
AmpScm.Buckets.Specialized.BitwiseAndBucket
AmpScm.Buckets.Specialized.BitwiseAndBucket.BitwiseAndBucket(AmpScm.Buckets.Bucket! left, AmpScm.Buckets.Bucket! right) -> void
AmpScm.Buckets.Specialized.BitwiseNotBucket
AmpScm.Buckets.Specialized.BitwiseNotBucket.BitwiseNotBucket(AmpScm.Buckets.Bucket! inner, int bufferSize = 4096) -> void
AmpScm.Buckets.Specialized.BitwiseOrBucket
AmpScm.Buckets.Specialized.BitwiseOrBucket.BitwiseOrBucket(AmpScm.Buckets.Bucket! left, AmpScm.Buckets.Bucket! right) -> void
AmpScm.Buckets.Specialized.BitwiseXorBucket
AmpScm.Buckets.Specialized.BitwiseXorBucket.BitwiseXorBucket(AmpScm.Buckets.Bucket! left, AmpScm.Buckets.Bucket! right) -> void
AmpScm.Buckets.Specialized.BucketFactory
AmpScm.Buckets.Specialized.BucketFactory.FromASCII(string! value) -> AmpScm.Buckets.Bucket!
AmpScm.Buckets.Specialized.BucketFactory.FromUTF8(string! value) -> AmpScm.Buckets.Bucket!
AmpScm.Buckets.Specialized.ConversionBucket
AmpScm.Buckets.Specialized.ConversionBucket.ConversionBucket(AmpScm.Buckets.Bucket! inner) -> void
AmpScm.Buckets.Specialized.WrappingBucket.HasMoreClosers() -> bool
const AmpScm.Buckets.Bucket.MaxRead = 2146435071 -> int
const AmpScm.Buckets.Specialized.ZLibBucket.DefaultBufferSize = 8192 -> int
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.ContentLength.get -> long
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.ContentType.get -> string?
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.Headers.get -> AmpScm.Buckets.Client.WebHeaderDictionary!
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.Position.get -> long?
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.ReadHeaders() -> System.Threading.Tasks.ValueTask
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Client.Buckets.HttpResponseBucket.SupportsHeaders.get -> bool
override AmpScm.Buckets.Client.HttpBucketWebRequest.GetResponseAsync() -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.Client.ResponseBucket!>
override AmpScm.Buckets.Specialized.BitwiseAndBucket.CanReset.get -> bool
override AmpScm.Buckets.Specialized.BitwiseAndBucket.Name.get -> string!
override AmpScm.Buckets.Specialized.BitwiseAndBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.BitwiseAndBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.BitwiseAndBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.BitwiseAndBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Specialized.BitwiseAndBucket.ReadSkipAsync(long requested) -> System.Threading.Tasks.ValueTask<long>
override AmpScm.Buckets.Specialized.BitwiseAndBucket.Reset() -> void
override AmpScm.Buckets.Specialized.BitwiseNotBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.BitwiseNotBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.BitwiseNotBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.BitwiseNotBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Specialized.BitwiseNotBucket.ReadSkipAsync(long requested) -> System.Threading.Tasks.ValueTask<long>
override AmpScm.Buckets.Specialized.BitwiseOrBucket.CanReset.get -> bool
override AmpScm.Buckets.Specialized.BitwiseOrBucket.Name.get -> string!
override AmpScm.Buckets.Specialized.BitwiseOrBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.BitwiseOrBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.BitwiseOrBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.BitwiseOrBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Specialized.BitwiseOrBucket.ReadSkipAsync(long requested) -> System.Threading.Tasks.ValueTask<long>
override AmpScm.Buckets.Specialized.BitwiseOrBucket.Reset() -> void
override AmpScm.Buckets.Specialized.BitwiseXorBucket.CanReset.get -> bool
override AmpScm.Buckets.Specialized.BitwiseXorBucket.Name.get -> string!
override AmpScm.Buckets.Specialized.BitwiseXorBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.BitwiseXorBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.BitwiseXorBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.BitwiseXorBucket.ReadRemainingBytesAsync() -> System.Threading.Tasks.ValueTask<long?>
override AmpScm.Buckets.Specialized.BitwiseXorBucket.ReadSkipAsync(long requested) -> System.Threading.Tasks.ValueTask<long>
override AmpScm.Buckets.Specialized.BitwiseXorBucket.Reset() -> void
override AmpScm.Buckets.Specialized.ConversionBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.ConversionBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.ConversionBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
override AmpScm.Buckets.Specialized.ConversionBucket.Reset() -> void
override AmpScm.Buckets.Specialized.TlsBucket.CanReset.get -> bool
override AmpScm.Buckets.Specialized.TlsBucket.Name.get -> string!
override AmpScm.Buckets.Specialized.TlsBucket.Peek() -> AmpScm.Buckets.BucketBytes
override AmpScm.Buckets.Specialized.TlsBucket.Position.get -> long?
override AmpScm.Buckets.Specialized.TlsBucket.ReadAsync(int requested = 2147483647) -> System.Threading.Tasks.ValueTask<AmpScm.Buckets.BucketBytes>
static AmpScm.Buckets.Bucket.Create.get -> AmpScm.Buckets.Specialized.BucketFactory!
static AmpScm.Buckets.BucketExtensions.HasSameContentsAsync(this AmpScm.Buckets.Bucket! left, AmpScm.Buckets.Bucket! right) -> System.Threading.Tasks.ValueTask<bool>
static AmpScm.Buckets.Client.BucketHttpClientExtensions.HttpChunk(this AmpScm.Buckets.Bucket! bucket) -> AmpScm.Buckets.Bucket!
static AmpScm.Buckets.Client.BucketHttpClientExtensions.HttpDechunk(this AmpScm.Buckets.Bucket! bucket) -> AmpScm.Buckets.Bucket!
static AmpScm.Buckets.Specialized.SpecializedBucketExtensions.Buffer(this AmpScm.Buckets.Bucket! bucket, int maxMemory = 1048576) -> AmpScm.Buckets.Bucket!
static AmpScm.Buckets.Specialized.SpecializedBucketExtensions.TextRecode(this AmpScm.Buckets.Bucket! bucket, System.Text.Encoding! sourceEncoding, System.Text.Encoding! targetEncoding) -> AmpScm.Buckets.Bucket!
virtual AmpScm.Buckets.AggregateBucket.InnerDispose() -> void
virtual AmpScm.Buckets.Client.BucketWebClient.Dispose(bool disposing) -> void
virtual AmpScm.Buckets.Client.BucketWebRequest.Method.get -> string?
virtual AmpScm.Buckets.Client.BucketWebRequest.Method.set -> void
virtual AmpScm.Buckets.Client.ResponseBucket.ContentLength.get -> long
virtual AmpScm.Buckets.Client.ResponseBucket.ContentType.get -> string?
virtual AmpScm.Buckets.Client.ResponseBucket.Headers.get -> AmpScm.Buckets.Client.WebHeaderDictionary!
virtual AmpScm.Buckets.Client.ResponseBucket.ReadHeaders() -> System.Threading.Tasks.ValueTask
virtual AmpScm.Buckets.Client.ResponseBucket.SupportsHeaders.get -> bool
virtual AmpScm.Buckets.Specialized.ConversionBucket.ConvertRequested(int requested) -> int
virtual AmpScm.Buckets.Specialized.WrappingBucket.InnerDispose() -> void
